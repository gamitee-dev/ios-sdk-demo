{
  "abstract" : [
    {
      "text" : "API for interacting with JoynedMobileSDK offerings",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/docs_bundle_identifier\/documentation\/JoynedMobileSDK"
      ],
      [
        "doc:\/\/docs_bundle_identifier\/documentation\/JoynedMobileSDK",
        "doc:\/\/docs_bundle_identifier\/documentation\/JoynedMobileSDK\/GettingStarted"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/docs_bundle_identifier\/documentation\/JoynedMobileSDK\/_04_offering"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "JoynedMobileSDK"
      }
    ],
    "role" : "article",
    "roleHeading" : "Article",
    "title" : "Offering handling API"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Joyned supports displaying diffrent offerings based on the applicationâ€™s category it can be anything from an e-comerce product, to a hotel booking (this is why we use the term Offering)",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Joyned mobile sdk allows its integrator to interact with offerings in two seperate ways:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "adding offerings to the system",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "responding to user click on existing offerings in the Joyned UI",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "tabs" : [
            {
              "content" : [
                {
                  "anchor" : "Adding-a-new-Offering",
                  "level" : 3,
                  "text" : "Adding a new Offering",
                  "type" : "heading"
                },
                {
                  "columns" : [
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "identifier" : "screenshot_mobile_invitation_01.png",
                              "type" : "image"
                            }
                          ],
                          "type" : "paragraph"
                        }
                      ],
                      "size" : 1
                    },
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "text" : "Joyned supports adding a new Offering only via the hosted UI.",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        },
                        {
                          "inlineContent" : [
                            {
                              "text" : "Once a user taps on the relevent button the mobile SDK asks its host application for the offering information via a delegation protocol and processes it accordingly.",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        },
                        {
                          "inlineContent" : [
                            {
                              "text" : "The delegation protocol in question is the ",
                              "type" : "text"
                            },
                            {
                              "identifier" : "doc:\/\/docs_bundle_identifier\/documentation\/JoynedMobileSDK\/JoynedButtonDelegate",
                              "isActive" : true,
                              "type" : "reference"
                            },
                            {
                              "text" : " you will need to",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        },
                        {
                          "inlineContent" : [
                            {
                              "text" : "The button delegate protocol covers three diffrent situations :",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        },
                        {
                          "items" : [
                            {
                              "content" : [
                                {
                                  "inlineContent" : [
                                    {
                                      "text" : "Standalone",
                                      "type" : "text"
                                    }
                                  ],
                                  "type" : "paragraph"
                                }
                              ]
                            },
                            {
                              "content" : [
                                {
                                  "inlineContent" : [
                                    {
                                      "text" : "Table \/ Collection view",
                                      "type" : "text"
                                    }
                                  ],
                                  "type" : "paragraph"
                                }
                              ]
                            }
                          ],
                          "type" : "unorderedList"
                        }
                      ],
                      "size" : 3
                    }
                  ],
                  "numberOfColumns" : 4,
                  "type" : "row"
                },
                {
                  "inlineContent" : [
                    {
                      "inlineContent" : [
                        {
                          "text" : "Standalone example:",
                          "type" : "text"
                        }
                      ],
                      "type" : "strong"
                    }
                  ],
                  "type" : "paragraph"
                },
                {
                  "code" : [
                    "import Foundation",
                    "import UIKit",
                    "",
                    "import JoynedMobileSDK",
                    "",
                    "class StandaloneViewController : UIViewController",
                    "{",
                    "    \/\/ MARK: - Properties",
                    "    internal var joynedButton : JoynedButton! {",
                    "        didSet { joynedButton.delegate = self }",
                    "    }",
                    "    internal var venue : Venue!",
                    "",
                    "    \/\/ MARK: - View LifeCycle",
                    "    override func viewDidLoad()",
                    "    {",
                    "        super.viewDidLoad()",
                    "        ",
                    "        joynedButton = JoynedSDK.generateJoynedButton(frame: CGRect(x: 100, y: 500, width: 70, height: 34), with: self)",
                    "        view.addSubview(button)",
                    "    }",
                    "}",
                    "extension StandaloneViewController : JoynedButtonDelegate",
                    "{",
                    "    func willPresentMobileSDKContent()",
                    "    {",
                    "        logger.debug()",
                    "    }",
                    "    ",
                    "    func joynedButton(_ button: JoynedButton, productOfferingFor location: CGPoint) -> JoynedOfferingRequest?",
                    "    {",
                    "        logger.debug()",
                    "        return encode(product: venue)",
                    "    }",
                    "    ",
                    "    private func encode(product item: Venue?) -> JoynedOfferingRequest?",
                    "    {",
                    "        guard let venue   = item              else { return nil }",
                    "        guard let product = venue.toPayload() else { return nil }",
                    "        guard let extra   = venue.toJSON()    else { return nil }",
                    "        return JoynedOfferingRequest(offeringString: product, extraString: extra)",
                    "    }",
                    "}"
                  ],
                  "syntax" : "swift",
                  "type" : "codeListing"
                },
                {
                  "inlineContent" : [
                    {
                      "inlineContent" : [
                        {
                          "text" : "Table \/ Collection example:",
                          "type" : "text"
                        }
                      ],
                      "type" : "strong"
                    }
                  ],
                  "type" : "paragraph"
                },
                {
                  "code" : [
                    "import Foundation",
                    "import UIKit",
                    "",
                    "import JoynedMobileSDK",
                    "",
                    "class GroupViewController : UIViewController",
                    "{",
                    "    \/\/ MARK: - type - enum",
                    "    struct Constants",
                    "    {",
                    "        struct Identifier",
                    "        {",
                    "            private init() {}",
                    "        }",
                    "        private init() {}",
                    "    }",
                    "    ",
                    "    \/\/ MARK: - Properties",
                    "    private var selectedItem : Venue?",
                    "    ",
                    "    \/\/ MARK: - Properties",
                    "    private var dataSource : UICollectionViewDiffableDataSource<Int, Venue>!",
                    "    ",
                    "    \/\/ MARK: - @IBOutlet",
                    "    @IBOutlet      var  logoImageView : UIImageView!",
                    "    @IBOutlet weak var collectionView : UICollectionView! {",
                    "        didSet {",
                    "            collectionView.delegate = self",
                    "        }",
                    "    }",
                    "    ",
                    "    \/\/ MARK: - View LifeCycle",
                    "    override func viewDidLoad()",
                    "    {",
                    "        super.viewDidLoad()",
                    "        \/\/ Do any additional setup after loading the view.",
                    "        ",
                    "        title = String()",
                    "        navigationItem.titleView = logoImageView",
                    "        navigationItem.setHidesBackButton(true, animated: false)",
                    "        ",
                    "        registerVisualElements()",
                    "        configureVisualElements()",
                    "    }",
                    "}",
                    "\/\/ MARK: - Constants",
                    "fileprivate extension GroupViewController.Constants.Identifier",
                    "{",
                    "    static var   cell : String { \"DealsFeedCellIdentifier\"   }",
                    "    static var header : String { \"DealsFeedHeaderIdentifier\" }",
                    "    static var global : String { \"SearchHeaderIdentifier\"    }",
                    "}",
                    "\/\/ MARK: - Collection View setup",
                    "fileprivate extension GroupViewController",
                    "{",
                    "    private func registerVisualElements()",
                    "    {",
                    "        collectionView.register(ProductCollectionViewCell.classNib, forCellWithReuseIdentifier: Constants.Identifier.cell)",
                    "        collectionView.register(SearchHeaderView.classNib         , forSupplementaryViewOfKind: Constants.Identifier.global, withReuseIdentifier: Constants.Identifier.global)",
                    "    }",
                    "    private func configureVisualElements()",
                    "    {",
                    "        ",
                    "        dataSource = UICollectionViewDiffableDataSource<Int, Venue>(collectionView: collectionView) { (collectionView, indexPath, item) -> UICollectionViewCell? in",
                    "            ",
                    "            let cell = collectionView.dequeueReusableCell(withReuseIdentifier: Constants.Identifier.cell, for: indexPath)",
                    "            ",
                    "            if let cell = cell as? ProductCollectionViewCell",
                    "            {",
                    "                cell.titleLabel.text        = item.productTitle",
                    "                cell.datesLabel.text        = \"\\(item.productDates.checkin) - \\(item.productDates.checkout)\"",
                    "                cell.descriptionLabel.text  = item.productDescription",
                    "                cell.locationLabel.text     = nil",
                    "                cell.priceLabel.text        = \"\\(item.productPrice.amount) \\(item.productPrice.currency)\"",
                    "                cell.imageView.image        = UIImage(named: item.productThumbnail)",
                    "                cell.joynedButton.delegate  = self",
                    "            }",
                    "            ",
                    "            return cell",
                    "        }",
                    "        dataSource?.supplementaryViewProvider = { (collectionView,kind,indexPath) -> UICollectionReusableView? in",
                    "            ",
                    "            guard kind == Constants.Identifier.global else { return nil }",
                    "            return collectionView.dequeueReusableSupplementaryView(",
                    "                ofKind: kind,",
                    "                withReuseIdentifier: Constants.Identifier.global,",
                    "                for: indexPath",
                    "            )",
                    "        }",
                    "    }",
                    "}",
                    "extension GroupViewController : JoynedButtonDelegate",
                    "{",
                    "    func willPresentMobileSDKContent()",
                    "    {",
                    "        logger.debug()",
                    "    }",
                    "    ",
                    "    func joynedButton(_ button: JoynedButton, productOfferingForItem indexPath: IndexPath) -> JoynedOfferingRequest?",
                    "    {",
                    "        return encode(product: dataSource.itemIdentifier(for: indexPath))",
                    "    }",
                    "    ",
                    "    private func encode(product item: Venue?) -> JoynedOfferingRequest?",
                    "    {",
                    "        guard let venue   = item              else { return nil }",
                    "        guard let product = venue.toPayload() else { return nil }",
                    "        guard let extra   = venue.toJSON()    else { return nil }",
                    "        \/\/ let extra: [String: Any] = [",
                    "        \/\/     \"itemLink\": \"https:\/\/voyage.joyned.app\/product\/1\",",
                    "        \/\/ ]",
                    "        return JoynedOfferingRequest(offeringString: product, extraString: extra)",
                    "    }",
                    "}",
                    ""
                  ],
                  "syntax" : "swift",
                  "type" : "codeListing"
                }
              ],
              "title" : "Add offering"
            },
            {
              "content" : [
                {
                  "anchor" : "In-App-navigation-in-response-to-user-action",
                  "level" : 3,
                  "text" : "In-App navigation in response to user action",
                  "type" : "heading"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "To support in-app navigation ",
                      "type" : "text"
                    },
                    {
                      "inlineContent" : [
                        {
                          "text" : "Joyned mobile sdk",
                          "type" : "text"
                        }
                      ],
                      "type" : "strong"
                    },
                    {
                      "text" : "  exposes a delegation method via its public accessd class.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                },
                {
                  "inlineContent" : [
                    {
                      "text" : "When user taps on an offering within the floating container the system extracts itâ€™s data , wrapps it into a rsponse object and calls on its delegate object with the ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "doc:\/\/docs_bundle_identifier\/documentation\/JoynedMobileSDK\/JoynedSDKDelegate\/mobileSDKDidTriggerNavigation(for:)",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : ".",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                },
                {
                  "inlineContent" : [
                    {
                      "inlineContent" : [
                        {
                          "text" : "Note:",
                          "type" : "text"
                        }
                      ],
                      "type" : "strong"
                    },
                    {
                      "text" : "",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "This is the only required method in the ",
                      "type" : "text"
                    },
                    {
                      "identifier" : "doc:\/\/docs_bundle_identifier\/documentation\/JoynedMobileSDK\/JoynedSDKDelegate",
                      "isActive" : true,
                      "type" : "reference"
                    },
                    {
                      "text" : " protocol.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                },
                {
                  "inlineContent" : [
                    {
                      "inlineContent" : [
                        {
                          "text" : "In-app navigation example:",
                          "type" : "text"
                        }
                      ],
                      "type" : "strong"
                    }
                  ],
                  "type" : "paragraph"
                },
                {
                  "code" : [
                    "func mobileSDKDidTriggerNavigation(for navigationPayload: JoynedMobileSDK.JoynedOfferingResponse)",
                    "{",
                    "    logger.debug()",
                    "    guard let targetUrl = navigationPayload.directUrl      else { return }",
                    "    guard let keyWindow = UIApplication.shared.v_keyWindow else { return }",
                    "    ",
                    "    if let topVC = keyWindow.v_topViewController {",
                    "        topVC.tabBarController?.selectedIndex = 0",
                    "    }",
                    "    ",
                    "    if let topVC = keyWindow.v_topViewController {",
                    "        topVC.navigationController?.popToRootViewController(animated: true)",
                    "    }",
                    "    ",
                    "    guard let vc = keyWindow.v_topViewController             else { return }",
                    "    guard let dealsVC = vc as? DealsFeedViewController       else { return }",
                    "    guard let item = DataService.shared.item(for: targetUrl) else { return }",
                    "    ",
                    "    dealsVC.present(selected: item)",
                    "    ",
                    "    JoynedSDK.minimizeDisplay()",
                    "}"
                  ],
                  "syntax" : "swift",
                  "type" : "codeListing"
                }
              ],
              "title" : "Respond to offering"
            }
          ],
          "type" : "tabNavigator"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/docs_bundle_identifier\/documentation\/JoynedMobileSDK\/JoynedOfferingRequest",
        "doc:\/\/docs_bundle_identifier\/documentation\/JoynedMobileSDK\/JoynedOfferingResponse"
      ],
      "title" : "Offering Related API"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/joynedmobilesdk\/_04_offering"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://docs_bundle_identifier/documentation/JoynedMobileSDK": {
  "abstract" : [
    {
      "text" : "We help people book together. With a better booking experience, better business results",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/docs_bundle_identifier\/documentation\/JoynedMobileSDK",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "JoynedMobileSDK",
  "type" : "topic",
  "url" : "\/documentation\/joynedmobilesdk"
},
"doc://docs_bundle_identifier/documentation/JoynedMobileSDK/GettingStarted": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/docs_bundle_identifier\/documentation\/JoynedMobileSDK\/GettingStarted",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Getting Started with Joyned mobile SDK",
  "type" : "topic",
  "url" : "\/documentation\/joynedmobilesdk\/gettingstarted"
},
"doc://docs_bundle_identifier/documentation/JoynedMobileSDK/JoynedButtonDelegate": {
  "abstract" : [
    {
      "text" : "Methods for managing JoynedButton behavior, allows the system a way to pass navigation requests & more",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JoynedButtonDelegate"
    }
  ],
  "identifier" : "doc:\/\/docs_bundle_identifier\/documentation\/JoynedMobileSDK\/JoynedButtonDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JoynedButtonDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "JoynedButtonDelegate",
  "type" : "topic",
  "url" : "\/documentation\/joynedmobilesdk\/joynedbuttondelegate"
},
"doc://docs_bundle_identifier/documentation/JoynedMobileSDK/JoynedOfferingRequest": {
  "abstract" : [
    {
      "text" : "A data object containing the offering information to be reported to the Joyned servers",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JoynedOfferingRequest"
    }
  ],
  "identifier" : "doc:\/\/docs_bundle_identifier\/documentation\/JoynedMobileSDK\/JoynedOfferingRequest",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JoynedOfferingRequest"
    }
  ],
  "role" : "symbol",
  "title" : "JoynedOfferingRequest",
  "type" : "topic",
  "url" : "\/documentation\/joynedmobilesdk\/joynedofferingrequest"
},
"doc://docs_bundle_identifier/documentation/JoynedMobileSDK/JoynedOfferingResponse": {
  "abstract" : [
    {
      "text" : "A data object containing the offering response as reported by the Joyned servers",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JoynedOfferingResponse"
    }
  ],
  "identifier" : "doc:\/\/docs_bundle_identifier\/documentation\/JoynedMobileSDK\/JoynedOfferingResponse",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JoynedOfferingResponse"
    }
  ],
  "role" : "symbol",
  "title" : "JoynedOfferingResponse",
  "type" : "topic",
  "url" : "\/documentation\/joynedmobilesdk\/joynedofferingresponse"
},
"doc://docs_bundle_identifier/documentation/JoynedMobileSDK/JoynedSDKDelegate": {
  "abstract" : [
    {
      "text" : "The Joyned mobile SDK main delegation protocol, implement this to recive notifications on major actions taken by the SDK and affect its behavior",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JoynedSDKDelegate"
    }
  ],
  "identifier" : "doc:\/\/docs_bundle_identifier\/documentation\/JoynedMobileSDK\/JoynedSDKDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JoynedSDKDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "JoynedSDKDelegate",
  "type" : "topic",
  "url" : "\/documentation\/joynedmobilesdk\/joynedsdkdelegate"
},
"doc://docs_bundle_identifier/documentation/JoynedMobileSDK/JoynedSDKDelegate/mobileSDKDidTriggerNavigation(for:)": {
  "abstract" : [
    {
      "text" : "Called when a user clicks on an offering within the Joyned UI, use this as a trigger for in-app navigation, for navigation details lokk into the payload object",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "mobileSDKDidTriggerNavigation"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:@M@JoynedMobileSDK@objc(cs)JoynedOfferingResponse",
      "text" : "JoynedOfferingResponse"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/docs_bundle_identifier\/documentation\/JoynedMobileSDK\/JoynedSDKDelegate\/mobileSDKDidTriggerNavigation(for:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "mobileSDKDidTriggerNavigation(for:)",
  "type" : "topic",
  "url" : "\/documentation\/joynedmobilesdk\/joynedsdkdelegate\/mobilesdkdidtriggernavigation(for:)"
},
"screenshot_mobile_invitation_01.png": {
  "alt" : "Joyned invitation mobile example 01",
  "identifier" : "screenshot_mobile_invitation_01.png",
  "type" : "image",
  "variants" : [
    {
      "traits" : [
        "1x",
        "light"
      ],
      "url" : "\/images\/screenshot_mobile_invitation_01.png"
    }
  ]
}
}
}